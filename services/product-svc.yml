apiVersion: networking.istio.io/v1alpha3
kind: Gateway
metadata:
  name: productpage-ingressgateway
  namespace: productpage
spec:
  selector:
    app: istio-ingress
    istio: ingress
  servers:
  - port:
      number: 80
      name: http
      protocol: HTTP
    hosts:
    - "*"

---
apiVersion: networking.istio.io/v1alpha3
kind: VirtualService
metadata:
  name: productpage-vs
  namespace: productpage
spec:
  hosts:
    - bookinfo.local
  gateways:
    - productpage-ingressgateway
  http:
    - route:
      - destination:
          host: productpage
          subset: blue
          port:
            number: 9080

---
apiVersion: networking.istio.io/v1alpha3
kind: VirtualService
metadata:
  name: productpage-vs-test
  namespace: productpage              
spec:
  hosts:
    - test.bookinfo.local
  gateways:
    - productpage-ingressgateway
  http:
  - headers:
      request:
        add:
          name: "test"
    route:
      - destination:
          host: productpage     
          subset: green
          port:
            number: 9080

---

apiVersion: v1
kind: Service
metadata:
  name: productpage
  namespace: productpage              # Add namespace details
  labels:
    app: productpage
    service: productpage
spec:
  type: ClusterIP
  selector:
    app: productpage
  ports:
  - port: 9080
    name: http

---
apiVersion: networking.istio.io/v1alpha3
kind: DestinationRule
metadata:
  name: productpage-dr
  namespace: productpage                  # Namespace where the productpage service resides
spec:
  host: productpage                      # Service name within the same namespace
  subsets:
  - name: blue
    labels:
      app: productpage
      color: blue
  - name: green
    labels:
      app: productpage
      color: green
  trafficPolicy:
    loadBalancer:
      simple: ROUND_ROBIN

# ---
# apiVersion: networking.istio.io/v1alpha3
# kind: EnvoyFilter
# metadata:
#   name: add-user-header
#   namespace: istio-system
# spec:
#   workloadSelector:
#     labels:
#       app: istio-ingress
#       istio: ingress
#   configPatches:
#   - applyTo: HTTP_FILTER
#     match:
#       context: GATEWAY
#       listener:
#         filterChain:
#           filter:
#             name: "envoy.filters.network.http_connection_manager"
#             subFilter:
#               name: "envoy.filters.http.router"
#     patch:
#       operation: INSERT_BEFORE
#       value:
#         name: envoy.filters.http.lua
#         typed_config:
#           "@type": "type.googleapis.com/envoy.extensions.filters.http.lua.v3.Lua"
#           inlineCode: |
#             function envoy_on_request(request_handle)
#               local headers = request_handle:headers()
#               if headers:get(":authority") == "test.bookinfo.local" then
#                 headers:add("user", "tester")
#               end
#             end